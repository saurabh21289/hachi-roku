#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.65.
#
# Copyright (C) 2009 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  # We cannot yet assume a decent shell, so we have to provide a
	# neutralization value for shells without unset; and this also
	# works around shells that cannot unset nonexistent variables.
	BASH_ENV=/dev/null
	ENV=/dev/null
	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
	export CONFIG_SHELL
	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"


} # as_fn_mkdir_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error ERROR [LINENO LOG_FD]
# ---------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with status $?, using 1 if that was 0.
as_fn_error ()
{
  as_status=$?; test $as_status -eq 0 && as_status=1
  if test "$3"; then
    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
  fi
  $as_echo "$as_me: error: $1" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# List of the tested programs.
at_tested='imap4d'
# List of the all the test groups.
at_groups_all=' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='??'
# Description of all the test groups.
at_help_all="1;testsuite.at:64;imap4d version;;
2;anystate.at:17;Non-authenticated state;anystate;
3;id.at:17;ID command;id;
4;select.at:17;select;;
5;examine.at:17;examine;;
6;status.at:17;status;;
7;expunge.at:17;expunge;;
8;close-expunge.at:17;Close with expunge;close close-expunge;
9;create01.at:17;create;create create00;
10;create02.at:17;create nested;create create01;
11;append00.at:17;append with flags;append00;
12;append01.at:17;append with envelope date;append01;
13;list.at:42;asterisk;list list00;
14;list.at:54;percent;list list01;
15;list.at:66;empty ref + asterisk;list list02;
16;list.at:79;root ref + asterisk;list list03;
17;list.at:85;absolute reference + asterisk;list list04;
18;list.at:105;absolute reference + percent;list list05;
19;list.at:123;absolute reference + mailbox;list list06;
20;list.at:132;empty reference + INBOX;list list07;
21;search.at:44;search sequence number;search search00;
22;search.at:49;search all;search search01;
23;search.at:55;search new;search search02;
24;search.at:60;search from personal;search search03;
25;search.at:63;search from email;search search04;
26;search.at:68;search larger;search search05;
27;search.at:73;search smaller;search search06;
28;search.at:78;search subject;search search07;
29;search.at:86;search header;search search08;
30;search.at:91;search cc;search search09;
31;search.at:96;search to;search search10;
32;search.at:102;search sentbefore;search search11;
33;search.at:108;search sentsince;search search12;
34;search.at:113;search beforedate;search search13;
35;search.at:118;search since;search search14;
36;search.at:122;search answered;search search15;
37;search.at:127;search text;search search16;
38;search.at:132;search multiple keys (implicit AND) 1;search search17;
39;search.at:135;search multiple keys (implicit AND) 2;search search18;
40;search.at:140;search or;search search19;
41;search.at:144;precedence 1;search search20;
42;search.at:147;precedence 2;search search21;
43;search.at:150;precedence 3;search search22;
44;fetch.at:56;flags;fetch fetch-flags fetch00;
45;fetch.at:61;internaldate;fetch fetch-internaldate fetch01;
46;fetch.at:68;uid;fetch fetch-uid fetch02;
47;fetch.at:72;uid + internaldate;fetch fetch-internaldate-uid fetch03;
48;fetch.at:83;envelope;fetch fetch-envelope fetch04;
49;fetch.at:94;ALL;fetch fetch-all fetch05;
50;fetch.at:108;BODYSTRUCTURE;fetch fetch-bodystructure fetch06;
51;fetch.at:118;BODY;fetch fetch-body fetch07;
52;fetch.at:140;BODY[HEADER];fetch fetch-body-header fetch08;
53;fetch.at:161;BODY[HEADER.FIELDS];fetch fetch-body-header-fields fetch09;
54;fetch.at:173;BODY[HEADER.FIELDS.NOT];fetch fetch-body-header-fields-not fetch10;
55;fetch.at:186;BODY[TEXT];fetch fetch-body-text fetch11;
56;fetch.at:232;BODY[TEXT]<X.Y>;fetch fetch-body-text-substring fetch12;
57;fetch.at:237;BODY[TEXT]<Y.X>;fetch fetch-body-text-rev-substring fetch13;
58;fetch.at:248;BODY[TEXT]<X-too-big>;fetch fetch-body-text-off2big fetch14;
59;fetch.at:261;BODY[TEXT] (truncated);fetch fetch-body-text-truncated fetch15;
60;fetch.at:307;BODY[N.MIME];fetch fetch-body-mime fetch16;
61;fetch.at:316;BODY[<section>];fetch fetch-body-section fetch17;
62;fetch.at:335;N.HEADER (text/plain);fetch fetch-header-subpart-text fetch18;
63;fetch.at:340;N.HEADER (message/rfc822);fetch fetch-header-subpart-msg fetch19;
64;fetch.at:357;N.HEADER.FIELDS;fetch fetch-header-fields-subpart fetch20;
65;fetch.at:366;nested message/rfc822;fetch fetch-nested fetch21;
66;fetch.at:380;nested multipart + message/rfc822;fetch fetch-nested fetch22;
67;fetch.at:399;BODY.PEEK[HEADER];fetch fetch-body-peek-header fetch23;
68;fetch.at:417;RFC822;fetch fetch-rfc822 fetch24;
69;fetch.at:470;RFC822.HEADER;fetch fetch-rfc822-header fetch25;
70;fetch.at:486;RFC822.SIZE;fetch fetch-rfc822-size fetch26;
71;fetch.at:493;RFC822.TEXT;fetch fetch-rfc822-text fetch27;
72;fetch.at:505;FAST;fetch fetch-fast fetch28;
73;fetch.at:514;FULL;fetch fetch-full fetch29;
74;IDEF0955.at:17;IDEF0955;;
75;IDEF0956.at:17;IDEF0956;;
"

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 75; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=*) at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'` ;;
  *)   at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/^.* \('$at_range_start' \)/\1/'`
	as_fn_append at_groups "$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/\( '$at_range_end'\) .*$/\1/'`
	as_fn_append at_groups "$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/^.*\( '$at_range_start' \)/\1/' \
	      -e 's/\( '$at_range_end'\) .*$/\1/'`
	as_fn_append at_groups "$at_range "
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the newlines.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//' |
	  tr "$as_nl" ' '
	`
	as_fn_append at_groups "$at_groups_selected "
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error "\`$at_prev' requires an argument."
fi

# Selected test groups.
if test -z "$at_groups"; then
  at_groups=$at_groups_all
else
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | tr ' ' "$as_nl" | sort -nu`
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <bug-mailutils@gnu.org>.
General help using GNU software: <http://www.gnu.org/gethelp/>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
GNU Mailutils 2.99.98 test suite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Passing at_groups is tricky.  We cannot use it to form a literal string
  # or regexp because of the limitation of AIX awk.  And Solaris' awk
  # doesn't grok more than 99 fields in a record, so we have to use `split'.
  # at_groups needs to be space-separated for this script to work.
  case $at_groups in
    *"$as_nl"* )
      at_groups=`$as_echo "$at_groups" | tr "$as_nl" ' '` ;;
  esac
  $as_echo "$at_groups$as_nl$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 NR == 1 {
	   for (n = split ($ 0, a, " "); n; n--)
	     selected[a[n]] = 1
	   next
	 }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (GNU Mailutils 2.99.98)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2009 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  at_groups is space-separated for entire test,
# newline-separated if only a subset of the testsuite is run.
case $at_groups in
  *' '*' '* | *"$as_nl"*"$as_nl"* )
      at_print_banners=: ;;
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to empty once printed.
# Banner 1. testsuite.at:77
# Category starts at test group 11.
at_banner_text_1="APPEND"
# Banner 2. testsuite.at:81
# Category starts at test group 13.
at_banner_text_2="LIST"
# Banner 3. testsuite.at:84
# Category starts at test group 21.
at_banner_text_3="SEARCH"
# Banner 4. testsuite.at:87
# Category starts at test group 44.
at_banner_text_4="FETCH"
# Banner 5. testsuite.at:90
# Category starts at test group 74.
at_banner_text_5="IDEF Checks"

# Take any -C into account.
if $at_change_dir ; then
  if test x- = "x$at_dir" ; then
    at_dir=./-
  fi
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: ${at_top_build_prefix=$at_top_builddir}

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.


# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
cat <<\_ASBOX
## --------------------------------- ##
## GNU Mailutils 2.99.98 test suite. ##
## --------------------------------- ##
_ASBOX
{
  cat <<\_ASBOX
## --------------------------------- ##
## GNU Mailutils 2.99.98 test suite. ##
## --------------------------------- ##
_ASBOX
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.  Prune directories
  # matching the package tarname, since they tend to be leftovers from
  # `make dist' or `make distcheck' and contain redundant or stale logs.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name "mailutils-*" -prune -o -name ChangeLog -print`
    do
      $as_echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = x && return 0
  eval at_banner_text_$1=
  $as_echo "$as_nl$at_banner_text$as_nl"
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/testsuite.at:62: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error "cannot find $at_program" "$LINENO" 5
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned." >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned." >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <bug-mailutils@gnu.org>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	;;
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	;;
    no:*)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_msg"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_msg"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files.
      if $at_debug_p; then
	at_fn_create_debugging_script
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 0 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo " $at_groups_all " | \
    sed 's/\( '$at_jobs'\) .*/\1/'`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      exec 6>"$at_job_fifo"
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo token >&6
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source" # AT_JOB_FIFO_FD>&-
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo token >&6
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <bug-mailutils@gnu.org>
   Subject: [GNU Mailutils 2.99.98] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
# 1. testsuite.at:64: imap4d version
at_setup_line='testsuite.at:64'
at_desc="imap4d version"
at_desc_line="  1: $at_desc                                 "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "1. testsuite.at:64: testing ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:64: imap4d --version | sed '1{s/ *\\[.*\\]//;q;}' "
at_fn_check_prepare_trace "testsuite.at:64"
( $at_check_trace; imap4d --version | sed '1{s/ *\[.*\]//;q;}'
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "imap4d (GNU Mailutils) 2.99.98
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:64"
if $at_failed; then :
  cat >.xfailfile <<'_EOT'

==============================================================
WARNING: Not using the proper version, *all* checks dubious...
==============================================================
_EOT

else
  rm -f $XFAILFILE
fi
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
# 2. anystate.at:17: Non-authenticated state
at_setup_line='anystate.at:17'
at_desc="Non-authenticated state"
at_desc_line="  2: $at_desc                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "2. anystate.at:17: testing ..."
  $at_traceon






cwd=`pwd`
cat >input <<'_ATEOF'
1 CAPABILITY
2 NOOP
3 NAMESPACE
X LOGOUT
_ATEOF


{ set +x
$as_echo "$at_srcdir/anystate.at:22:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "anystate.at:22"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* OK IMAP4rev1 Test mode
* CAPABILITY IMAP4rev1 NAMESPACE ID IDLE LITERAL+ UNSELECT
1 OK CAPABILITY Completed
2 OK NOOP Completed
3 BAD NAMESPACE Wrong state
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/anystate.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }





  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
# 3. id.at:17: ID command
at_setup_line='id.at:17'
at_desc="ID command"
at_desc_line="  3: $at_desc                                     "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "3. id.at:17: testing ..."
  $at_traceon






cwd=`pwd`
cat >input <<'_ATEOF'
1 ID NIL
X LOGOUT
_ATEOF


{ set +x
$as_echo "$at_srcdir/id.at:22:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "id.at:22"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* OK IMAP4rev1 Test mode
1 BAD ID Wrong state
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/id.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }






cwd=`pwd`
cat >input <<'_ATEOF'
1 ID NIL
X LOGOUT
_ATEOF


{ set +x
$as_echo "$at_srcdir/id.at:34:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "id.at:34"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
1 OK ID Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/id.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
# 4. select.at:17: select
at_setup_line='select.at:17'
at_desc="select"
at_desc_line="  4: $at_desc                                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "4. select.at:17: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/select.at:19:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "select.at:19"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 8 EXISTS
* 5 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 4] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)] Permanent flags
1 OK [READ-WRITE] SELECT Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/select.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
# 5. examine.at:17: examine
at_setup_line='examine.at:17'
at_desc="examine"
at_desc_line="  5: $at_desc                                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "5. examine.at:17: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 EXAMINE INBOX
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/examine.at:19:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "examine.at:19"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 8 EXISTS
* 5 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 4] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS ()] No permanent flags
1 OK [READ-ONLY] EXAMINE Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/examine.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
# 6. status.at:17: status
at_setup_line='status.at:17'
at_desc="status"
at_desc_line="  6: $at_desc                                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "6. status.at:17: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 STATUS INBOX (MESSAGES RECENT UNSEEN UIDNEXT)
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/status.at:19:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "status.at:19"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* STATUS INBOX (MESSAGES 8 RECENT 5 UNSEEN 5 UIDNEXT 9)
1 OK STATUS Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/status.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
# 7. expunge.at:17: expunge
at_setup_line='expunge.at:17'
at_desc="expunge"
at_desc_line="  7: $at_desc                                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "7. expunge.at:17: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 EXPUNGE
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox temp
if test -e temp/search.mbox; then

# First, set all modes to +w
find temp/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find temp/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find temp | xargs chmod +w
# Then, remove executable bit from regular files
find temp -type f | xargs chmod -x

fi



sed 's/^\(Status: .*\)/\1D/' temp > INBOX

{ set +x
$as_echo "$at_srcdir/expunge.at:19:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "expunge.at:19"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 8 EXISTS
* 5 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 4] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)] Permanent flags
1 OK [READ-WRITE] SELECT Completed
* 1 EXPUNGED
* 1 EXPUNGED
* 1 EXPUNGED
* 5 EXISTS
* 5 RECENT
2 OK EXPUNGE Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/expunge.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
# 8. close-expunge.at:17: Close with expunge
at_setup_line='close-expunge.at:17'
at_desc="Close with expunge"
at_desc_line="  8: $at_desc                             "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "8. close-expunge.at:17: testing ..."
  $at_traceon



# According to RFC3501, CLOSE command should not send untagged EXPUNGE
# responses even if expunge actually took place.


cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 CLOSE
3 EXAMINE INBOX
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox temp
if test -e temp/search.mbox; then

# First, set all modes to +w
find temp/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find temp/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find temp | xargs chmod +w
# Then, remove executable bit from regular files
find temp -type f | xargs chmod -x

fi



sed 's/^\(Status: .*\)/\1D/' temp > INBOX

{ set +x
$as_echo "$at_srcdir/close-expunge.at:23:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_uidvalidity
"
at_fn_check_prepare_notrace 'a `...` command substitution' "close-expunge.at:23"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_uidvalidity

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 8 EXISTS
* 5 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 4] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)] Permanent flags
1 OK [READ-WRITE] SELECT Completed
2 OK CLOSE Completed
* 5 EXISTS
* 0 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 1] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS ()] No permanent flags
3 OK [READ-ONLY] EXAMINE Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/close-expunge.at:23"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
# 9. create01.at:17: create
at_setup_line='create01.at:17'
at_desc="create"
at_desc_line="  9: $at_desc                                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "9. create01.at:17: testing ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/create01.at:20:
cat >input <<'_ATEOF'
1 create flat
X LOGOUT
_ATEOF


imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r'
find . -name flat
"
at_fn_check_prepare_notrace 'a `...` command substitution' "create01.at:20"
( $at_check_trace;
cat >input <<'_ATEOF'
1 create flat
X LOGOUT
_ATEOF


imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r'
find . -name flat

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
1 OK CREATE Completed
* BYE Session terminating.
X OK LOGOUT Completed
./flat
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/create01.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
# 10. create02.at:17: create nested
at_setup_line='create02.at:17'
at_desc="create nested"
at_desc_line=" 10: $at_desc                                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "10. create02.at:17: testing ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/create02.at:20:
cat >input <<'_ATEOF'
1 create en/to/tre
X LOGOUT
_ATEOF


imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r'
find . -name tre
"
at_fn_check_prepare_notrace 'a `...` command substitution' "create02.at:20"
( $at_check_trace;
cat >input <<'_ATEOF'
1 create en/to/tre
X LOGOUT
_ATEOF


imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r'
find . -name tre

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
1 OK CREATE Completed
* BYE Session terminating.
X OK LOGOUT Completed
./en/to/tre
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/create02.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
# 11. append00.at:17: append with flags
at_setup_line='append00.at:17'
at_fn_banner 1
at_desc="append with flags"
at_desc_line=" 11: $at_desc                              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "11. append00.at:17: testing ..."
  $at_traceon



cat >input <<'_ATEOF'
1 APPEND mbox (\Seen) {300+}
Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
From: Fred Foobar <foobar@Blurdybloop.COM>
Subject: afternoon meeting
To: mooch@owatagu.siam.edu
Message-Id: <B27397-0100000@Blurdybloop.COM>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII

Hello Joe, do you think we can meet at 3:30 tomorrow

X LOGOUT
_ATEOF


{ set +x
$as_echo "$at_srcdir/append00.at:35:
> mbox
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r'
echo \"==\"
awk 'NR==1 {print \"1:\",\$1,\$2; next} NF==0 {print NR\":\"; next} {print NR\":\",\$0}' mbox
"
at_fn_check_prepare_notrace 'a `...` command substitution' "append00.at:35"
( $at_check_trace;
> mbox
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r'
echo "=="
awk 'NR==1 {print "1:",$1,$2; next} NF==0 {print NR":"; next} {print NR":",$0}' mbox

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
1 OK APPEND Completed
* BYE Session terminating.
X OK LOGOUT Completed
==
1: From foobar@Blurdybloop.COM
2: Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
3: From: Fred Foobar <foobar@Blurdybloop.COM>
4: Subject: afternoon meeting
5: To: mooch@owatagu.siam.edu
6: Message-Id: <B27397-0100000@Blurdybloop.COM>
7: MIME-Version: 1.0
8: Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
9:
10: Hello Joe, do you think we can meet at 3:30 tomorrow
11:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/append00.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
# 12. append01.at:17: append with envelope date
at_setup_line='append01.at:17'
at_fn_banner 1
at_desc="append with envelope date"
at_desc_line=" 12: $at_desc                      "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "12. append01.at:17: testing ..."
  $at_traceon



cat >input <<'_ATEOF'
1 APPEND mbox "25-Aug-2002 18:00:00 +0200" {274+}
Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
From: Fred Foobar <foobar@Blurdybloop.COM>
Subject: afternoon meeting again
To: mooch@owatagu.siam.edu
Message-Id: <B27397-0200000@Blurdybloop.COM>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII

Better yet at 04:00?

X LOGOUT
_ATEOF


{ set +x
$as_echo "$at_srcdir/append01.at:35:
> mbox
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r'
echo \"==\"
awk 'NF==0 {print NR\":\"; next} {print NR\":\",\$0}' mbox
"
at_fn_check_prepare_notrace 'a `...` command substitution' "append01.at:35"
( $at_check_trace;
> mbox
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r'
echo "=="
awk 'NF==0 {print NR":"; next} {print NR":",$0}' mbox

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
1 OK APPEND Completed
* BYE Session terminating.
X OK LOGOUT Completed
==
1: From foobar@Blurdybloop.COM Sun Aug 25 18:00:00 2002
2: Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
3: From: Fred Foobar <foobar@Blurdybloop.COM>
4: Subject: afternoon meeting again
5: To: mooch@owatagu.siam.edu
6: Message-Id: <B27397-0200000@Blurdybloop.COM>
7: MIME-Version: 1.0
8: Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
9:
10: Better yet at 04:00?
11:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/append01.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
# 13. list.at:42: asterisk
at_setup_line='list.at:42'
at_fn_banner 2
at_desc="asterisk"
at_desc_line=" 13: $at_desc                                       "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "13. list.at:42: testing ..."
  $at_traceon




cwd=`pwd`
cat >input <<'_ATEOF'
1 LIST "~" "*"
X LOGOUT
_ATEOF


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:42:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:42"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" ~/bigto.mbox
* LIST (\\NoInferiors) \"/\" ~/mbox
* LIST (\\NoInferiors) \"/\" ~/mbox1
* LIST (\\NoInferiors) \"/\" ~/relational.mbox
* LIST (\\NoInferiors) \"/\" ~/search.mbox
* LIST (\\NoInferiors) \"/\" ~/sieve.mbox
* LIST (\\NoInferiors) \"/\" ~/teaparty.mbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
# 14. list.at:54: percent
at_setup_line='list.at:54'
at_fn_banner 2
at_desc="percent"
at_desc_line=" 14: $at_desc                                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "14. list.at:54: testing ..."
  $at_traceon




cwd=`pwd`
cat >input <<'_ATEOF'
1 LIST "~" "%"
X LOGOUT
_ATEOF


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:54:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:54"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" ~/bigto.mbox
* LIST (\\NoInferiors) \"/\" ~/mbox
* LIST (\\NoInferiors) \"/\" ~/mbox1
* LIST (\\NoInferiors) \"/\" ~/relational.mbox
* LIST (\\NoInferiors) \"/\" ~/search.mbox
* LIST (\\NoInferiors) \"/\" ~/sieve.mbox
* LIST (\\NoInferiors) \"/\" ~/teaparty.mbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
# 15. list.at:66: empty ref + asterisk
at_setup_line='list.at:66'
at_fn_banner 2
at_desc="empty ref + asterisk"
at_desc_line=" 15: $at_desc                           "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "15. list.at:66: testing ..."
  $at_traceon




cwd=`pwd`
cat >input <<'_ATEOF'
1 LIST "" "*"
X LOGOUT
_ATEOF


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:66:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:66"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" bigto.mbox
* LIST (\\NoInferiors) \"/\" mbox
* LIST (\\NoInferiors) \"/\" mbox1
* LIST (\\NoInferiors) \"/\" relational.mbox
* LIST (\\NoInferiors) \"/\" search.mbox
* LIST (\\NoInferiors) \"/\" sieve.mbox
* LIST (\\NoInferiors) \"/\" teaparty.mbox
* LIST (\\NoInferiors) NIL INBOX
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
# 16. list.at:79: root ref + asterisk
at_setup_line='list.at:79'
at_fn_banner 2
at_desc="root ref + asterisk"
at_desc_line=" 16: $at_desc                            "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "16. list.at:79: testing ..."
  $at_traceon




cwd=`pwd`
cat >input <<'_ATEOF'
1 LIST "/" "*"
X LOGOUT
_ATEOF


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:79:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:79"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1 NO LIST The requested item could not be found.
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
# 17. list.at:85: absolute reference + asterisk
at_setup_line='list.at:85'
at_fn_banner 2
at_desc="absolute reference + asterisk"
at_desc_line=" 17: $at_desc                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "17. list.at:85: testing ..."
  $at_traceon




cwd=`pwd`
cat > input <<EOT
1 LIST "$cwd/spool" "*"
X LOGOUT

EOT


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi




mkdir spool/folder




cp -r $abs_top_srcdir/testsuite/folder/one spool/folder
if test -e spool/folder/one; then

# First, set all modes to +w
find spool/folder/one | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder/one -type f | xargs chmod -x

else

# First, set all modes to +w
find spool/folder | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/folder/two spool/folder
if test -e spool/folder/two; then

# First, set all modes to +w
find spool/folder/two | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder/two -type f | xargs chmod -x

else

# First, set all modes to +w
find spool/folder | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/list.at:85:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output|sed \"s|\$cwd/spool|///|\"
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:85"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output|sed "s|$cwd/spool|///|"

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" ////bigto.mbox
* LIST (\\NoInferiors) \"/\" ////folder/one
* LIST (\\NoInferiors) \"/\" ////folder/two
* LIST (\\NoInferiors) \"/\" ////mbox
* LIST (\\NoInferiors) \"/\" ////mbox1
* LIST (\\NoInferiors) \"/\" ////relational.mbox
* LIST (\\NoInferiors) \"/\" ////search.mbox
* LIST (\\NoInferiors) \"/\" ////sieve.mbox
* LIST (\\NoInferiors) \"/\" ////teaparty.mbox
* LIST (\\NoSelect) \"/\" ////folder
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
# 18. list.at:105: absolute reference + percent
at_setup_line='list.at:105'
at_fn_banner 2
at_desc="absolute reference + percent"
at_desc_line=" 18: $at_desc                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "18. list.at:105: testing ..."
  $at_traceon




cwd=`pwd`
cat > input <<EOT
1 LIST "$cwd/spool" "%"
X LOGOUT

EOT


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi




mkdir spool/folder




cp -r $abs_top_srcdir/testsuite/folder/one spool/folder
if test -e spool/folder/one; then

# First, set all modes to +w
find spool/folder/one | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder/one -type f | xargs chmod -x

else

# First, set all modes to +w
find spool/folder | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/folder/two spool/folder
if test -e spool/folder/two; then

# First, set all modes to +w
find spool/folder/two | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder/two -type f | xargs chmod -x

else

# First, set all modes to +w
find spool/folder | xargs chmod +w
# Then, remove executable bit from regular files
find spool/folder -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/list.at:105:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output|sed \"s|\$cwd/spool|///|\"
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:105"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output|sed "s|$cwd/spool|///|"

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" ////bigto.mbox
* LIST (\\NoInferiors) \"/\" ////mbox
* LIST (\\NoInferiors) \"/\" ////mbox1
* LIST (\\NoInferiors) \"/\" ////relational.mbox
* LIST (\\NoInferiors) \"/\" ////search.mbox
* LIST (\\NoInferiors) \"/\" ////sieve.mbox
* LIST (\\NoInferiors) \"/\" ////teaparty.mbox
* LIST (\\NoSelect) \"/\" ////folder
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
# 19. list.at:123: absolute reference + mailbox
at_setup_line='list.at:123'
at_fn_banner 2
at_desc="absolute reference + mailbox"
at_desc_line=" 19: $at_desc                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "19. list.at:123: testing ..."
  $at_traceon




cwd=`pwd`
cat > input <<EOT
1 LIST "$cwd/spool" "search.mbox"
X LOGOUT

EOT


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:123:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output|sed \"s|\$cwd/spool|///|\"
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:123"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output|sed "s|$cwd/spool|///|"

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) \"/\" ////search.mbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
# 20. list.at:132: empty reference + INBOX
at_setup_line='list.at:132'
at_fn_banner 2
at_desc="empty reference + INBOX"
at_desc_line=" 20: $at_desc                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "20. list.at:132: testing ..."
  $at_traceon




cwd=`pwd`
cat >input <<'_ATEOF'
1 LIST "" INBOX
X LOGOUT
_ATEOF


mkdir spool





cp -r $abs_top_srcdir/testsuite/spool/bigto.mbox spool
if test -e spool/bigto.mbox; then

# First, set all modes to +w
find spool/bigto.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/bigto.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox1 spool
if test -e spool/mbox1; then

# First, set all modes to +w
find spool/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/mbox spool
if test -e spool/mbox; then

# First, set all modes to +w
find spool/mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/relational.mbox spool
if test -e spool/relational.mbox; then

# First, set all modes to +w
find spool/relational.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/relational.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/search.mbox spool
if test -e spool/search.mbox; then

# First, set all modes to +w
find spool/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/sieve.mbox spool
if test -e spool/sieve.mbox; then

# First, set all modes to +w
find spool/sieve.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/sieve.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi








cp -r $abs_top_srcdir/testsuite/spool/teaparty.mbox spool
if test -e spool/teaparty.mbox; then

# First, set all modes to +w
find spool/teaparty.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find spool/teaparty.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find spool | xargs chmod +w
# Then, remove executable bit from regular files
find spool -type f | xargs chmod -x

fi






{ set +x
$as_echo "$at_srcdir/list.at:132:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/spool --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  sorted_list_output
"
at_fn_check_prepare_notrace 'a `...` command substitution' "list.at:132"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/spool --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  sorted_list_output

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* LIST (\\NoInferiors) NIL INBOX
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/list.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
# 21. search.at:44: search sequence number
at_setup_line='search.at:44'
at_fn_banner 3
at_desc="search sequence number"
at_desc_line=" 21: $at_desc                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "21. search.at:44: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH 1:*
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:44:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:44"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 1 2 3 4 5 6 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
# 22. search.at:49: search all
at_setup_line='search.at:49'
at_fn_banner 3
at_desc="search all"
at_desc_line=" 22: $at_desc                                     "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "22. search.at:49: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH ALL
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:49:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:49"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 1 2 3 4 5 6 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
# 23. search.at:55: search new
at_setup_line='search.at:55'
at_fn_banner 3
at_desc="search new"
at_desc_line=" 23: $at_desc                                     "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "23. search.at:55: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH NEW
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:55:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:55"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 4 5 6 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
# 24. search.at:60: search from personal
at_setup_line='search.at:60'
at_fn_banner 3
at_desc="search from personal"
at_desc_line=" 24: $at_desc                           "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "24. search.at:60: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH FROM corrector
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:60:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:60"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 4 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
# 25. search.at:63: search from email
at_setup_line='search.at:63'
at_fn_banner 3
at_desc="search from email"
at_desc_line=" 25: $at_desc                              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "25. search.at:63: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH FROM lexi@example.net
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:63:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:63"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 1 3 5 6 7
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
# 26. search.at:68: search larger
at_setup_line='search.at:68'
at_fn_banner 3
at_desc="search larger"
at_desc_line=" 26: $at_desc                                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "26. search.at:68: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH LARGER 512
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:68:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:68"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 3 4
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
# 27. search.at:73: search smaller
at_setup_line='search.at:73'
at_fn_banner 3
at_desc="search smaller"
at_desc_line=" 27: $at_desc                                 "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "27. search.at:73: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SMALLER 400
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:73:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:73"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
# 28. search.at:78: search subject
at_setup_line='search.at:78'
at_fn_banner 3
at_desc="search subject"
at_desc_line=" 28: $at_desc                                 "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "28. search.at:78: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SUBJECT "Alliance"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:78:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:78"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 6
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
# 29. search.at:86: search header
at_setup_line='search.at:86'
at_fn_banner 3
at_desc="search header"
at_desc_line=" 29: $at_desc                                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "29. search.at:86: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH HEADER Message-Id "<200207291200.3303@example.org>"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:86:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:86"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 3
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
# 30. search.at:91: search cc
at_setup_line='search.at:91'
at_fn_banner 3
at_desc="search cc"
at_desc_line=" 30: $at_desc                                      "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "30. search.at:91: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH CC Corrector
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:91:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:91"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 6
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
# 31. search.at:96: search to
at_setup_line='search.at:96'
at_fn_banner 3
at_desc="search to"
at_desc_line=" 31: $at_desc                                      "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "31. search.at:96: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH TO editor+recheck
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:96:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:96"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 7
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
# 32. search.at:102: search sentbefore
at_setup_line='search.at:102'
at_fn_banner 3
at_desc="search sentbefore"
at_desc_line=" 32: $at_desc                              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "32. search.at:102: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SENTBEFORE "30-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:102:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:102"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 1 2
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
# 33. search.at:108: search sentsince
at_setup_line='search.at:108'
at_fn_banner 3
at_desc="search sentsince"
at_desc_line=" 33: $at_desc                               "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "33. search.at:108: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SENTSINCE "31-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:108:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:108"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 5 6 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
# 34. search.at:113: search beforedate
at_setup_line='search.at:113'
at_fn_banner 3
at_desc="search beforedate"
at_desc_line=" 34: $at_desc                              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "34. search.at:113: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH BEFORE "30-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:113:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:113"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 1
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
# 35. search.at:118: search since
at_setup_line='search.at:118'
at_fn_banner 3
at_desc="search since"
at_desc_line=" 35: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "35. search.at:118: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SINCE "30-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:118:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:118"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 3 4 5 6 7 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
# 36. search.at:122: search answered
at_setup_line='search.at:122'
at_fn_banner 3
at_desc="search answered"
at_desc_line=" 36: $at_desc                                "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "36. search.at:122: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH ANSWERED
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:122:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:122"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 3
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
# 37. search.at:127: search text
at_setup_line='search.at:127'
at_fn_banner 3
at_desc="search text"
at_desc_line=" 37: $at_desc                                    "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "37. search.at:127: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH TEXT person
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:127:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:127"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 5 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
# 38. search.at:132: search multiple keys (implicit AND) 1
at_setup_line='search.at:132'
at_fn_banner 3
at_desc="search multiple keys (implicit AND) 1"
at_desc_line=" 38: $at_desc          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "38. search.at:132: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH TEXT person FROM corrector
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:132:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:132"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
# 39. search.at:135: search multiple keys (implicit AND) 2
at_setup_line='search.at:135'
at_fn_banner 3
at_desc="search multiple keys (implicit AND) 2"
at_desc_line=" 39: $at_desc          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "39. search.at:135: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH SENTSINCE "30-Jul-2002" SENTBEFORE "31-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:135:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:135"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 3 4
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
# 40. search.at:140: search or
at_setup_line='search.at:140'
at_fn_banner 3
at_desc="search or"
at_desc_line=" 40: $at_desc                                      "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "40. search.at:140: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH OR FROM corrector ANSWERED
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:140:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:140"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 3 4 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
# 41. search.at:144: precedence 1
at_setup_line='search.at:144'
at_fn_banner 3
at_desc="precedence 1"
at_desc_line=" 41: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "41. search.at:144: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH (OR FROM corrector ANSWERED) SENTSINCE "30-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:144:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:144"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 3 4 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
# 42. search.at:147: precedence 2
at_setup_line='search.at:147'
at_fn_banner 3
at_desc="precedence 2"
at_desc_line=" 42: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "42. search.at:147: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH OR FROM corrector ANSWERED SENTSINCE "30-Jul-2002"
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:147:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:147"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 3 4 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
# 43. search.at:150: precedence 3
at_setup_line='search.at:150'
at_fn_banner 3
at_desc="precedence 3"
at_desc_line=" 43: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "43. search.at:150: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 SEARCH OR FROM corrector (ANSWERED SENTSINCE "30-Jul-2002")
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/search.at:150:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "search.at:150"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* SEARCH 2 3 4 8
2 OK SEARCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
# 44. fetch.at:56: flags
at_setup_line='fetch.at:56'
at_fn_banner 4
at_desc="flags"
at_desc_line=" 44: $at_desc                                          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "44. fetch.at:56: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 (FLAGS)
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:56:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:56"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (FLAGS (\\Recent))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
# 45. fetch.at:61: internaldate
at_setup_line='fetch.at:61'
at_fn_banner 4
at_desc="internaldate"
at_desc_line=" 45: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "45. fetch.at:61: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 INTERNALDATE
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:61:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged|fixup_tz
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:61"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged|fixup_tz

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (INTERNALDATE \"13-Jul-2002 00:43:18 +0000\")
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
# 46. fetch.at:68: uid
at_setup_line='fetch.at:68'
at_fn_banner 4
at_desc="uid"
at_desc_line=" 46: $at_desc                                            "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "46. fetch.at:68: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 UID
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:68:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:68"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (UID 3)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
# 47. fetch.at:72: uid + internaldate
at_setup_line='fetch.at:72'
at_fn_banner 4
at_desc="uid + internaldate"
at_desc_line=" 47: $at_desc                             "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "47. fetch.at:72: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 (FLAGS INTERNALDATE UID)
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:72:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged|fixup_tz
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:72"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged|fixup_tz

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (FLAGS (\\Recent) INTERNALDATE \"13-Jul-2002 00:43:18 +0000\" UID 3)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
# 48. fetch.at:83: envelope
at_setup_line='fetch.at:83'
at_fn_banner 4
at_desc="envelope"
at_desc_line=" 48: $at_desc                                       "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "48. fetch.at:83: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1:* ENVELOPE
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:83:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:83"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (ENVELOPE (\"Fri, 28 Dec 2001 22:18:08 +0200\" \"Jabberwocky\" ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) NIL NIL NIL \"<200112282018.fBSKI8N04906@nonexistent.net>\"))
* 2 FETCH (ENVELOPE (\"Fri, 28 Dec 2001 23:28:08 +0200\" \"Re: Jabberwocky\" ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200112232808.fERKR9N16790@dontmailme.org>\"))
* 3 FETCH (ENVELOPE (\"Sat, 13 Jul 2002 00:43:18 +0300\" \"Simple MIME\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122143.g6CLhIb05086@example.net>\"))
* 4 FETCH (ENVELOPE (\"Sat, 13 Jul 2002 00:50:58 +0300\" \"Nested MIME\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122150.g6CLowb05126@example.net>\"))
* 5 FETCH (ENVELOPE (\"Sat, 13 Jul 2002 00:43:18 +0300\" \"Empty MIME Parts\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122143.g6CLhIb05086@example.net>\"))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
# 49. fetch.at:94: ALL
at_setup_line='fetch.at:94'
at_fn_banner 4
at_desc="ALL"
at_desc_line=" 49: $at_desc                                            "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "49. fetch.at:94: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1:* ALL
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:94:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged|fixup_tz
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:94"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged|fixup_tz

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Recent) INTERNALDATE \"28-Dec-2001 22:18:09 +0000\" RFC822.SIZE 1298 ENVELOPE (\"Fri, 28 Dec 2001 22:18:08 +0200\" \"Jabberwocky\" ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) NIL NIL NIL \"<200112282018.fBSKI8N04906@nonexistent.net>\"))
* 2 FETCH (FLAGS (\\Recent) INTERNALDATE \"28-Dec-2001 23:28:09 +0000\" RFC822.SIZE 547 ENVELOPE (\"Fri, 28 Dec 2001 23:28:08 +0200\" \"Re: Jabberwocky\" ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Bar\" NIL \"bar\" \"dontmailme.org\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200112232808.fERKR9N16790@dontmailme.org>\"))
* 3 FETCH (FLAGS (\\Recent) INTERNALDATE \"13-Jul-2002 00:43:18 +0000\" RFC822.SIZE 1611 ENVELOPE (\"Sat, 13 Jul 2002 00:43:18 +0300\" \"Simple MIME\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122143.g6CLhIb05086@example.net>\"))
* 4 FETCH (FLAGS (\\Recent) INTERNALDATE \"13-Jul-2002 00:50:58 +0000\" RFC822.SIZE 3483 ENVELOPE (\"Sat, 13 Jul 2002 00:50:58 +0300\" \"Nested MIME\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122150.g6CLowb05126@example.net>\"))
* 5 FETCH (FLAGS (\\Recent) INTERNALDATE \"13-Jul-2002 00:43:18 +0000\" RFC822.SIZE 884 ENVELOPE (\"Sat, 13 Jul 2002 00:43:18 +0300\" \"Empty MIME Parts\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122143.g6CLhIb05086@example.net>\"))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
# 50. fetch.at:108: BODYSTRUCTURE
at_setup_line='fetch.at:108'
at_fn_banner 4
at_desc="BODYSTRUCTURE"
at_desc_line=" 50: $at_desc                                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "50. fetch.at:108: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1:* BODYSTRUCTURE
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:108:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:108"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODYSTRUCTURE (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 972 35 NIL NIL NIL))
* 2 FETCH (BODYSTRUCTURE (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 219 4 NIL NIL NIL))
* 3 FETCH (BODYSTRUCTURE ((\"text\" \"plain\" (\"name\" \"msg.1\" \"charset\" \"us-ascii\") \"<5082.1026510189.1@example.net>\" \"How doth\" \"7BIT\" 239 9 NIL NIL NIL)(\"application\" \"octet-stream\" (\"name\" \"msg.21\") \"<5082.1026510189.2@example.net>\" \"Father William Part I\" \"base64\" 468 NIL NIL NIL) \"mixed\" (\"boundary\" \"----- =_aaaaaaaaaa0\") NIL NIL))
* 4 FETCH (BODYSTRUCTURE ((\"text\" \"plain\" (\"name\" \"msg.21\" \"charset\" \"us-ascii\") \"<5122.1026510654.2@example.net>\" \"Father William Part I\" \"7BIT\" 351 10 NIL NIL NIL)((\"application\" \"octet-stream\" (\"name\" \"msg.22\") \"<5122.1026510654.4@example.net>\" \"Father William Part II\" \"base64\" 486 NIL NIL NIL)((\"application\" \"octet-stream\" (\"name\" \"msg.23\") \"<5122.1026510654.6@example.net>\" \"Father William Part III\" \"base64\" 490 NIL NIL NIL)(\"application\" \"octet-stream\" (\"name\" \"msg.24\") \"<5122.1026510654.7@example.net>\" \"Father William Part IV\" \"base64\" 502 NIL NIL NIL) \"mixed\" (\"boundary\" \"----- =_aaaaaaaaaa2\") NIL NIL) \"mixed\" (\"boundary\" \"----- =_aaaaaaaaaa1\") NIL NIL) \"mixed\" (\"boundary\" \"----- =_aaaaaaaaaa0\") NIL NIL))
* 5 FETCH (BODYSTRUCTURE ((\"text\" \"plain\" (\"name\" \"empty\" \"charset\" \"us-ascii\") \"<5082.1026510189.1@example.net>\" \"Empty part\" \"7BIT\" 0 0 NIL NIL NIL)(\"text\" \"plain\" (\"name\" \"single.line\" \"charset\" \"us-ascii\") \"<5082.1026510189.2@example.net>\" \"Single line part\" \"7BIT\" 2 1 NIL NIL NIL) \"mixed\" (\"boundary\" \"----- =_aaaaaaaaaa0\") NIL NIL))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
# 51. fetch.at:118: BODY
at_setup_line='fetch.at:118'
at_fn_banner 4
at_desc="BODY"
at_desc_line=" 51: $at_desc                                           "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "51. fetch.at:118: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1:* BODY
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:118:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:118"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODY (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 972 35))
* 2 FETCH (BODY (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 219 4))
* 3 FETCH (BODY ((\"text\" \"plain\" (\"name\" \"msg.1\" \"charset\" \"us-ascii\") \"<5082.1026510189.1@example.net>\" \"How doth\" \"7BIT\" 239 9)(\"application\" \"octet-stream\" (\"name\" \"msg.21\") \"<5082.1026510189.2@example.net>\" \"Father William Part I\" \"base64\" 468) \"mixed\" NIL NIL NIL))
* 4 FETCH (BODY ((\"text\" \"plain\" (\"name\" \"msg.21\" \"charset\" \"us-ascii\") \"<5122.1026510654.2@example.net>\" \"Father William Part I\" \"7BIT\" 351 10)((\"application\" \"octet-stream\" (\"name\" \"msg.22\") \"<5122.1026510654.4@example.net>\" \"Father William Part II\" \"base64\" 486)((\"application\" \"octet-stream\" (\"name\" \"msg.23\") \"<5122.1026510654.6@example.net>\" \"Father William Part III\" \"base64\" 490)(\"application\" \"octet-stream\" (\"name\" \"msg.24\") \"<5122.1026510654.7@example.net>\" \"Father William Part IV\" \"base64\" 502) \"mixed\" NIL NIL NIL) \"mixed\" NIL NIL NIL) \"mixed\" NIL NIL NIL))
* 5 FETCH (BODY ((\"text\" \"plain\" (\"name\" \"empty\" \"charset\" \"us-ascii\") \"<5082.1026510189.1@example.net>\" \"Empty part\" \"7BIT\" 0 0)(\"text\" \"plain\" (\"name\" \"single.line\" \"charset\" \"us-ascii\") \"<5082.1026510189.2@example.net>\" \"Single line part\" \"7BIT\" 2 1) \"mixed\" NIL NIL NIL))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
# 52. fetch.at:140: BODY[HEADER]
at_setup_line='fetch.at:140'
at_fn_banner 4
at_desc="BODY[HEADER]"
at_desc_line=" 52: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "52. fetch.at:140: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[HEADER]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:140:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:140"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[HEADER] {326}
Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
# 53. fetch.at:161: BODY[HEADER.FIELDS]
at_setup_line='fetch.at:161'
at_fn_banner 4
at_desc="BODY[HEADER.FIELDS]"
at_desc_line=" 53: $at_desc                            "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "53. fetch.at:161: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[HEADER.FIELDS (FROM TO SUBJECT)]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:161:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:161"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[HEADER.FIELDS (FROM TO SUBJECT)] {94}
FROM: Foo Bar <foobar@nonexistent.net>
TO: Bar <bar@dontmailme.org>
SUBJECT: Jabberwocky

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
# 54. fetch.at:173: BODY[HEADER.FIELDS.NOT]
at_setup_line='fetch.at:173'
at_fn_banner 4
at_desc="BODY[HEADER.FIELDS.NOT]"
at_desc_line=" 54: $at_desc                        "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "54. fetch.at:173: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[HEADER.FIELDS.NOT (FROM TO SUBJECT)]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:173:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:173"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[HEADER.FIELDS.NOT (FROM TO SUBJECT)] {234}
Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
# 55. fetch.at:186: BODY[TEXT]
at_setup_line='fetch.at:186'
at_fn_banner 4
at_desc="BODY[TEXT]"
at_desc_line=" 55: $at_desc                                     "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "55. fetch.at:186: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[TEXT]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:186:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:186"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[TEXT] {972}
\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
# 56. fetch.at:232: BODY[TEXT]<X.Y>
at_setup_line='fetch.at:232'
at_fn_banner 4
at_desc="BODY[TEXT]<X.Y>"
at_desc_line=" 56: $at_desc                                "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "56. fetch.at:232: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[TEXT]<0.20>
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:232:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:232"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[TEXT]<0> {20}
\`Twas brillig, and t)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
# 57. fetch.at:237: BODY[TEXT]<Y.X>
at_setup_line='fetch.at:237'
at_fn_banner 4
at_desc="BODY[TEXT]<Y.X>"
at_desc_line=" 57: $at_desc                                "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "57. fetch.at:237: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[TEXT]<200.100>
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:237:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:237"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[TEXT]<200> {100}
t catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword i)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:237"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
# 58. fetch.at:248: BODY[TEXT]<X-too-big>
at_setup_line='fetch.at:248'
at_fn_banner 4
at_desc="BODY[TEXT]<X-too-big>"
at_desc_line=" 58: $at_desc                          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "58. fetch.at:248: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[TEXT]<3900.4000>
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:248:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:248"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[TEXT]<3900> \"\")
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
# 59. fetch.at:261: BODY[TEXT] (truncated)
at_setup_line='fetch.at:261'
at_fn_banner 4
at_desc="BODY[TEXT] (truncated)"
at_desc_line=" 59: $at_desc                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "59. fetch.at:261: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[TEXT]<0.4000>
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:261:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:261"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) BODY[TEXT]<0> {972}
\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
# 60. fetch.at:307: BODY[N.MIME]
at_setup_line='fetch.at:307'
at_fn_banner 4
at_desc="BODY[N.MIME]"
at_desc_line=" 60: $at_desc                                   "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "60. fetch.at:307: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 BODY[1.MIME]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:307:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:307"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (FLAGS (\\Seen) BODY[1.MIME] {138}
Content-Type: text/plain; name=\"msg.1\"; charset=\"us-ascii\"
Content-ID: <5082.1026510189.1@example.net>
Content-Description: How doth

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
# 61. fetch.at:316: BODY[<section>]
at_setup_line='fetch.at:316'
at_fn_banner 4
at_desc="BODY[<section>]"
at_desc_line=" 61: $at_desc                                "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "61. fetch.at:316: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 4 BODY[2.2.1]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:316:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:316"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 4 FETCH (FLAGS (\\Seen) BODY[2.2.1] {490}
YFlvdSBhcmUgb2xkLCcgc2FpZCB0aGUgeW91dGgsIGBhbmQgeW91ciBqYXdzIGFyZSB0b28gd2Vh
awpGb3IgYW55dGhpbmcgdG91Z2hlciB0aGFuIHN1ZXQ7CllldCB5b3UgZmluaXNoZWQgdGhlIGdv
b3NlLCB3aXRoIHRoZSBib25lcyBhbmQgdGhlIGJlYWstLQpQcmF5IGhvdyBkaWQgeW91IG1hbmFn
ZSB0byBkbyBpdD8nCgpgSW4gbXkgeW91dGgsJyBzYWlkIGhpcyBmYXRoZXIsIGBJIHRvb2sgdG8g
dGhlIGxhdywKQW5kIGFyZ3VlZCBlYWNoIGNhc2Ugd2l0aCBteSB3aWZlOwpBbmQgdGhlIG11c2N1
bGFyIHN0cmVuZ3RoLCB3aGljaCBpdCBnYXZlIHRvIG15IGphdywKSGFzIGxhc3RlZCB0aGUgcmVz
dCBvZiBteSBsaWZlLicK
)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
# 62. fetch.at:335: N.HEADER (text/plain)
at_setup_line='fetch.at:335'
at_fn_banner 4
at_desc="N.HEADER (text/plain)"
at_desc_line=" 62: $at_desc                          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "62. fetch.at:335: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[1.HEADER]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/msg.mbox INBOX
if test -e INBOX/msg.mbox; then

# First, set all modes to +w
find INBOX/msg.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/msg.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:335:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:335"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODY[1.HEADER] NIL)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
# 63. fetch.at:340: N.HEADER (message/rfc822)
at_setup_line='fetch.at:340'
at_fn_banner 4
at_desc="N.HEADER (message/rfc822)"
at_desc_line=" 63: $at_desc                      "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "63. fetch.at:340: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[2.HEADER]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/msg.mbox INBOX
if test -e INBOX/msg.mbox; then

# First, set all modes to +w
find INBOX/msg.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/msg.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:340:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:340"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODY[2.HEADER] {406}
Message-ID: <20111123103317.27412@host.example.org>
Date: Wed, 23 Nov 2011 10:33:17 +0200
From: Sergey Poznyakoff <gray@example.org>
To: <gray@example.com>
Subject: Re: RFC822 Subtype
In-reply-to: Your message of Wed, 23 Nov 2011 08:48:16 +0100
         <87wrar6zzz@example.com>
References: <87wrar6zzz@example.com>
X-Envelope-Date: Wed Nov 23 08:33:17 2011
X-Envelope-Sender: gray@example.org

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
# 64. fetch.at:357: N.HEADER.FIELDS
at_setup_line='fetch.at:357'
at_fn_banner 4
at_desc="N.HEADER.FIELDS"
at_desc_line=" 64: $at_desc                                "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "64. fetch.at:357: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY[2.HEADER.FIELDS (FROM TO)]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/msg.mbox INBOX
if test -e INBOX/msg.mbox; then

# First, set all modes to +w
find INBOX/msg.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/msg.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:357:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:357"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODY[2.HEADER.FIELDS (FROM TO)] {70}
FROM: Sergey Poznyakoff <gray@example.org>
TO: <gray@example.com>

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
# 65. fetch.at:366: nested message/rfc822
at_setup_line='fetch.at:366'
at_fn_banner 4
at_desc="nested message/rfc822"
at_desc_line=" 65: $at_desc                          "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "65. fetch.at:366: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 2 BODY[2.2.TEXT]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/msg.mbox INBOX
if test -e INBOX/msg.mbox; then

# First, set all modes to +w
find INBOX/msg.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/msg.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:366:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:366"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 2 FETCH (FLAGS (\\Seen) BODY[2.2.TEXT] {451}
5.2.1.  RFC822 Subtype

   A media type of \"message/rfc822\" indicates that the body contains an
   encapsulated message, with the syntax of an RFC 822 message.
   However, unlike top-level RFC 822 messages, the restriction that each
   \"message/rfc822\" body must include a \"From\", \"Date\", and at least one
   destination header is removed and replaced with the requirement that
   at least one of \"From\", \"Subject\", or \"Date\" must be present.
)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:366"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
# 66. fetch.at:380: nested multipart + message/rfc822
at_setup_line='fetch.at:380'
at_fn_banner 4
at_desc="nested multipart + message/rfc822"
at_desc_line=" 66: $at_desc              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "66. fetch.at:380: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 2 BODY[2.2.TEXT]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/msg.mbox INBOX
if test -e INBOX/msg.mbox; then

# First, set all modes to +w
find INBOX/msg.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/msg.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:380:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:380"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 2 FETCH (FLAGS (\\Seen) BODY[2.2.TEXT] {451}
5.2.1.  RFC822 Subtype

   A media type of \"message/rfc822\" indicates that the body contains an
   encapsulated message, with the syntax of an RFC 822 message.
   However, unlike top-level RFC 822 messages, the restriction that each
   \"message/rfc822\" body must include a \"From\", \"Date\", and at least one
   destination header is removed and replaced with the requirement that
   at least one of \"From\", \"Subject\", or \"Date\" must be present.
)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
# 67. fetch.at:399: BODY.PEEK[HEADER]
at_setup_line='fetch.at:399'
at_fn_banner 4
at_desc="BODY.PEEK[HEADER]"
at_desc_line=" 67: $at_desc                              "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "67. fetch.at:399: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 BODY.PEEK[HEADER]
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:399:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:399"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (BODY[HEADER] {326}
Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
# 68. fetch.at:417: RFC822
at_setup_line='fetch.at:417'
at_fn_banner 4
at_desc="RFC822"
at_desc_line=" 68: $at_desc                                         "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "68. fetch.at:417: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 RFC822
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:417:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:417"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Seen) RFC822 {1298}
Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
# 69. fetch.at:470: RFC822.HEADER
at_setup_line='fetch.at:470'
at_fn_banner 4
at_desc="RFC822.HEADER"
at_desc_line=" 69: $at_desc                                  "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "69. fetch.at:470: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 2 RFC822.HEADER
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:470:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:470"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 2 FETCH (RFC822.HEADER {328}
Received: (from bar@dontmailme.org)
	by dontmailme.org id fERKR9N16790
	for foobar@nonexistent.net; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 23:28:08 +0200
From: Bar <bar@dontmailme.org>
To: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112232808.fERKR9N16790@dontmailme.org>
Subject: Re: Jabberwocky

)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:470"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
# 70. fetch.at:486: RFC822.SIZE
at_setup_line='fetch.at:486'
at_fn_banner 4
at_desc="RFC822.SIZE"
at_desc_line=" 70: $at_desc                                    "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "70. fetch.at:486: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 3 RFC822.SIZE
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:486:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:486"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 3 FETCH (RFC822.SIZE 1611)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:486"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
# 71. fetch.at:493: RFC822.TEXT
at_setup_line='fetch.at:493'
at_fn_banner 4
at_desc="RFC822.TEXT"
at_desc_line=" 71: $at_desc                                    "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "71. fetch.at:493: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 2 RFC822.TEXT
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:493:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:493"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 2 FETCH (FLAGS (\\Seen) RFC822.TEXT {219}
It seems very pretty, but it's *rather* hard to understand!'
Somehow it seems to fill my head with ideas -- only I don't
exactly know what they are!  However, SOMEBODY killed SOMETHING:
that's clear, at any rate...
)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
# 72. fetch.at:505: FAST
at_setup_line='fetch.at:505'
at_fn_banner 4
at_desc="FAST"
at_desc_line=" 72: $at_desc                                           "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "72. fetch.at:505: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 1 FAST
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:505:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged|fixup_tz
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:505"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged|fixup_tz

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 1 FETCH (FLAGS (\\Recent) INTERNALDATE \"28-Dec-2001 22:18:09 +0000\" RFC822.SIZE 1298)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
# 73. fetch.at:514: FULL
at_setup_line='fetch.at:514'
at_fn_banner 4
at_desc="FULL"
at_desc_line=" 73: $at_desc                                           "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "73. fetch.at:514: testing ..."
  $at_traceon



cwd=`pwd`
cat >input <<'_ATEOF'
1 SELECT INBOX
2 FETCH 4 FULL
X LOGOUT
_ATEOF






cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




{ set +x
$as_echo "$at_srcdir/fetch.at:514:
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | tr -d '\\r' |  remove_select_untagged|fixup_tz
"
at_fn_check_prepare_notrace 'a `...` command substitution' "fetch.at:514"
( $at_check_trace;
imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | tr -d '\r' |  remove_select_untagged|fixup_tz

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 4 FETCH (FLAGS (\\Recent) INTERNALDATE \"13-Jul-2002 00:50:58 +0000\" RFC822.SIZE 3483 ENVELOPE (\"Sat, 13 Jul 2002 00:50:58 +0300\" \"Nested MIME\" ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Sergey Poznyakoff\" NIL \"gray\" \"example.net\")) ((\"Foo Bar\" NIL \"foobar\" \"nonexistent.net\")) NIL NIL NIL \"<200207122150.g6CLowb05126@example.net>\") BODY ((\"text\" \"plain\" (\"name\" \"msg.21\" \"charset\" \"us-ascii\") \"<5122.1026510654.2@example.net>\" \"Father William Part I\" \"7BIT\" 351 10)((\"application\" \"octet-stream\" (\"name\" \"msg.22\") \"<5122.1026510654.4@example.net>\" \"Father William Part II\" \"base64\" 486)((\"application\" \"octet-stream\" (\"name\" \"msg.23\") \"<5122.1026510654.6@example.net>\" \"Father William Part III\" \"base64\" 490)(\"application\" \"octet-stream\" (\"name\" \"msg.24\") \"<5122.1026510654.7@example.net>\" \"Father William Part IV\" \"base64\" 502) \"mixed\" NIL NIL NIL) \"mixed\" NIL NIL NIL) \"mixed\" NIL NIL NIL))
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/fetch.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }



  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
# 74. IDEF0955.at:17: IDEF0955
at_setup_line='IDEF0955.at:17'
at_fn_banner 5
at_desc="IDEF0955"
at_desc_line=" 74: $at_desc                                       "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "74. IDEF0955.at:17: testing ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/IDEF0955.at:19:
test \"\$MU_ULONG_MAX_1\" = 0 && exit 77

cat > input <<EOT
1 select INBOX
2 FETCH 1:\$MU_ULONG_MAX_1 FLAGS
3 UID FETCH 1:\$MU_ULONG_MAX_1 FLAGS
X LOGOUT
EOT





cp -r \$abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | remove_uidvalidity | tr -d '\\r'
"
at_fn_check_prepare_notrace 'a `...` command substitution' "IDEF0955.at:19"
( $at_check_trace;
test "$MU_ULONG_MAX_1" = 0 && exit 77

cat > input <<EOT
1 select INBOX
2 FETCH 1:$MU_ULONG_MAX_1 FLAGS
3 UID FETCH 1:$MU_ULONG_MAX_1 FLAGS
X LOGOUT
EOT





cp -r $abs_top_srcdir/testsuite/spool/mbox1 INBOX
if test -e INBOX/mbox1; then

# First, set all modes to +w
find INBOX/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | remove_uidvalidity | tr -d '\r'

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 5 EXISTS
* 5 RECENT
* OK [UIDNEXT 6] Predicted next uid
* OK [UNSEEN 1] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)] Permanent flags
1 OK [READ-WRITE] SELECT Completed
* 1 FETCH (FLAGS (\\Recent))
* 2 FETCH (FLAGS (\\Recent))
* 3 FETCH (FLAGS (\\Recent))
* 4 FETCH (FLAGS (\\Recent))
* 5 FETCH (FLAGS (\\Recent))
2 OK FETCH Completed
* 1 FETCH (UID 1 FLAGS (\\Recent))
* 2 FETCH (UID 2 FLAGS (\\Recent))
* 3 FETCH (UID 3 FLAGS (\\Recent))
* 4 FETCH (UID 4 FLAGS (\\Recent))
* 5 FETCH (UID 5 FLAGS (\\Recent))
3 OK UID FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/IDEF0955.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
# 75. IDEF0956.at:17: IDEF0956
at_setup_line='IDEF0956.at:17'
at_fn_banner 5
at_desc="IDEF0956"
at_desc_line=" 75: $at_desc                                       "
$at_quiet $as_echo_n "$at_desc_line"
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "75. IDEF0956.at:17: testing ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/IDEF0956.at:19:
test \"\$MU_ULONG_MAX_1\" = 0 && exit 77

cat > input <<EOT
1 select INBOX
2 FETCH 1 BODY[TEXT]<0.\$MU_ULONG_MAX_1>
X LOGOUT
EOT





cp -r \$abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='\`pwd\`/ --set '|mailbox|folder='\`pwd\` --set '|mailbox|mailbox-pattern='\`pwd\`/INBOX  --preauth  < input | remove_uidvalidity | tr -d '\\r'
"
at_fn_check_prepare_notrace 'a `...` command substitution' "IDEF0956.at:19"
( $at_check_trace;
test "$MU_ULONG_MAX_1" = 0 && exit 77

cat > input <<EOT
1 select INBOX
2 FETCH 1 BODY[TEXT]<0.$MU_ULONG_MAX_1>
X LOGOUT
EOT





cp -r $abs_top_srcdir/testsuite/spool/search.mbox INBOX
if test -e INBOX/search.mbox; then

# First, set all modes to +w
find INBOX/search.mbox | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX/search.mbox -type f | xargs chmod -x

else

# First, set all modes to +w
find INBOX | xargs chmod +w
# Then, remove executable bit from regular files
find INBOX -type f | xargs chmod -x

fi




imap4d --no-site-config --no-user-config --test --set logging.syslog=0 --set logging.severity=notice --set .gsasl.enable=0 --set '|homedir='`pwd`/ --set '|mailbox|folder='`pwd` --set '|mailbox|mailbox-pattern='`pwd`/INBOX  --preauth  < input | remove_uidvalidity | tr -d '\r'

) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "* PREAUTH IMAP4rev1 Test mode
* 8 EXISTS
* 5 RECENT
* OK [UIDNEXT 9] Predicted next uid
* OK [UNSEEN 4] first unseen message
* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)
* OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)] Permanent flags
1 OK [READ-WRITE] SELECT Completed
* 1 FETCH (BODY[TEXT]<0> {161}
ABASEMENT, n.  A decent and customary mental attitude in the presence
of wealth of power.  Peculiarly appropriate in an employee when
addressing an employer.
)
2 OK FETCH Completed
* BYE Session terminating.
X OK LOGOUT Completed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/IDEF0956.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
